Լաբորատոր աշխատանք 1
1. Ստեղծել lab1 անունով դիրեկտորիա, որում ստեղծել 4 տեքստային ֆայլ՝ file.txt, file1.txt, file2.txt, file3.txt և 2 դիրեկտորիա՝ dir1, dir2։
Ստեղծում ենք lab1 դիրեկտորիա
 mkdir lab1
Ստեղծում ենք .txt 4 ֆայլ: Նշենք, որ Ֆայլերի անվանումները Case Sensitive են:
touch file.txt file1.txt file2.txt file3.txt
Ստեղծում ենք dir1 և dir2 դիրեկտորիաներ
mkdir dir1 dir2
2. Կատարել հետևյալ հրամանները և բացատրել տարբերությունը․ ls *.txt և ls * .txt
ls *.txt 
որոնեց տվյալ դիրեկտորիայի բոլոր այն ֆայլերը, որոնք վերջանում են .txt-ով

ls * .txt
որոնեց բոլոր այն ֆայլերը, որոնք վերջանում են .txt-ով

3. Ցուցադրել բոլոր տեքստային ֆայլերը (ավարտվում է .txt սիմվոլներով), որոնց անվանումը սկսվում է f սիմվոլով և բաղկացած է 4 սիմվոլից։
ls -1 f???.txt
-1 Գրում ենք նրա համար, որ նոր տողից տպի

4.Ցուցադրել բոլոր տեքստային ֆայլերը, որոնց անվանումը սկսվում է file բառով, որին հաջորդում է թվանշան։
ls -1 file*[[:digit:]]*.txt
[[:digit:]] Համապատասխանում է (0-9) որևէ թվանշանի

5. Ցուցադրել բոլոր տեքստային ֆայլերը, որոնց անվան վերջին սիմվոլը փոքրատառ է, կամ 1, 2 թվանշաններից որևէ մեկը։
ls -1 *([[:lower:]])|([1-2]).txt
[[:lower:]] սիմվոլը փոքրատառ է

6. Պատճենել /etc/passwd ֆայլը lab1 դիրեկտորիայում
cp/etc/passwd lab1
cp հրամանը պատճենում է ֆայլը

7. Անվանափոխել պատճենված ֆայլը՝ այն դարձնելով new: Տեղափոխել new ֆայլը դեպի dir1, այնուհետև տեղափոխել դեպի dir2:
mv lab1 new
mv new dir1
mv new dir2
mv (move) հրամանը վերանվանում կամ տեղափոխում է ֆայլը։

8. Անվանափոխել dir2-ը՝ այն դարձնելով dir3։ Տեղափոխել dir3-ը դեպի dir1։
mv dir2 dir3
mv dir3/* dir1/
9. Տեղափոխել dir3-ում գտնվող new ֆայլը դեպի lab1։
mv ./dir1/new ./
10. Ջնջել lab1 դիրեկտորիան։
rm -r lab1

Լաբորատոր աշխատանք 2
1. Կատարել հետևյալ հրամանները, բացատրել տարբերությունը․ 1. cat > file1 2. cat file1 3. cat < file1
cat (concatenate) հրամանը կարդում է մեկ կամ մի քանի ֆայլեր և արտածում է դրանց պարունակությունը։

cat > file1
Այս հրամանը ստեղծում կամ վերագրանցում է file1 անունով ֆայլ և թույլ է տալիս տեքստ մուտքագրել այդ ֆայլի մեջ: Կարող ենք մուտքագրել տեքստ, սեղմել Ctrl+D (մուտքագրումն ավարտելու համար) և բովանդակությունը պահել ֆայլում:

cat file1
Այս հրամանը ցուցադրում է file1 ֆայլի բովանդակությունը տերմինալի մեջ: Այսպիսով, եթե file1 գոյություն ունի և պարունակում է որոշակի տեքստ, ապա կտեսնենք այդ տեքստը էկրանին:

cat < file1
Այս հրամանը օգտագործում է < նիշը` մուտքագրումը վերահղելու համար: Այսինքն, cat հրամանը կարդում է file1 ֆայլի մուտքագրումը և ցուցադրում այն ​​տերմինալի էկրանին: Սա համարժեք է ```cat file1``` հրամանին:

2. Ստեղծել որոշակի պարունակությամբ 3 տեքստային ֆայլ՝ file1.txt, file2.txt, file3.txt։ Այս ֆայլերի պարունակությունը կցել միմյանց և գրել նոր ֆայլում՝ final.txt։
cat > file1.txt
cat > file2.txt
cat > file3.txt
cat file1.txt file2.txt file3.txt > Final.txt
3. Ցուցադրել /home/student դիրեկտորիայում տեքստային ֆայլերի քանակը։
ls -l /home/student/*.txt | wc -l
4. Սորտավորել file1.txt, file2.txt, file3.txt ֆայլերի պարունակությունը և գրել նոր ֆայլում։
cat file1.txt file2.txt file3.txt | sort > sorted.txt
sort Սորտավորում է մեկ կամ մի քանի ֆայլերի տողերը և արդյունքը տեղադրում STDOUT հոսքում։

5.Արտածել /home/student դիրեկտորիայի առաջին 15 ֆայլերը՝ դասավորված նվազման կարգով ըստ ֆայլի ծավալի։
ls /home/student/* | sort -rh | head -n 15
sort -rh Սորտավորում է նվազման կարգով (r) reversed order in (-h) human-readable size

6. Արտածել /home/student դիրեկտորիայի ֆայլերի ցուցակը, միաժամանակ այն տեղադրելով ls.txt ֆայլում։
ls /home/student > /home/student/ls.txt
7.Օգտագործելով tr հրամանը՝ գաղտնագրել "secret text" տողը ROT13 ալգորիթմով։ Վերծանել գաղտնագրված հաղորդագրությունը։
echo "secret text" | tr 'A-Za-z' 'N-ZA-Mn-za-m'
Գաղտնագրված հաղորդագրությունը կլինի "frperg grkg" քանի որ

s -> f: 's' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'f'.
e -> r: 'e' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'r'.
c -> p: 'c' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'p'
r -> e: 'r' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'e'.
e -> r: 'e' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'r'.
t -> g: 't' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'g'.
x -> k: 'x' տառը իր տեղից 13 տառ առաջ է գնում և դառնում է 'k'.
8. Ստեղծել նոր ֆայլ՝ home.txt, հետևյալ պարունակությամբ․Student’s home directory is {home_dir}.sed հրամանի միջոցով փոխարինել {home_dir} հատվածը /home/student-ով։
echo "Student’s home directory is {home_dir}." > home.txt
sed 's/{home_dir}/\/home\/student/' home.txt > home_modified.txt
sed (stream editor) ծրագիրն օգտագործվում է տեքստում փոփոխություններ կատարելու նպատակով։

9. Ստեղծել ֆայլ, որն ունի առնվազն 5 տող պարունակություն՝ file4.txt։ Արտածել 2-4-րդ տողերը:
echo "Line 1" > file4.txt
echo "Line 2" >> file4.txt
echo "Line 3" >> file4.txt
echo "Line 4" >> file4.txt
echo "Line 5" >> file4.txt
sed -n '2p;4p' file4.txt
10. Ջնջել file4.txt ֆայլի 2-4-րդ տողերը։
sed -i '2d;4d' file4_modified.txt

Լաբորատոր աշխատանք 3
1.Ցուցադրել /etc դիրեկտորիայի բոլոր ֆայլերը, որոնց անվան մեջ թվանշան կա։
ls /etc | grep '[0-9]'
grep (global regular expression print) հրամանը տեքստային ֆայլերում փնտրում է նշված ռեգուլյար արտահայտությանը համապատասխանող տողերը և արտածում։

2. Ստեղծել որոշակի պարունակությամբ ֆայլ։ Ֆայլում փնտրել այՆ տողերը, որոնք բաղակացած են 5 տառից, և ավարտվում են lo տառերով։
echo -e "Hello\nWorld\nTestlo\nHillo\nOtherlo\n" > sample_file.txt
grep -E '\b\w{5}lo$' sample_file.txt
CONTENT:

Hello
World
Testlo
Hillo
Otherlo
grep -E '\b\w{5}lo$' sample_file.txt: Օգտագործում է grep հրամանը sample_file.txt Ֆայլում տողերը գտնելու համար. Մեզ պետք են այն տողերը, որոնք բաղակացած են 5 տառից, և ավարտվում են "lo" տառերով։\w{5} այսինքն 5 տառանի, և $ նշանակում է տողի ավարտ։

EXPECTED OUTPUT:

Testlo
Otherlo
3. Ցուցադրել հետևյալ հրամանների տարբերությունը․ grep -h '[A-Z]' dirlist*.txt, grep -h '[-AZ]' dirlist*.txt, grep -h '^[A-Z]' dirlist*.txt, grep -h '[^A-Z]' dirlist*.txt:
grep -h '[A-Z]' dirlist*.txt: Որոնում է առնվազն մեկ մեծատառ պարունակող տողեր:
grep -h '[-AZ]' dirlist*.txt: Որոնում է «-», «A» կամ «Z» նիշերից որևէ մեկը պարունակող տողեր:
grep -h '^[A-Z]' dirlist*.txt: Որոնում է մեծատառով սկսվող տողեր:
grep -h '[^A-Z]' dirlist*.txt: Որոնում է տողեր, որոնք պարունակում են մեծատառերից բացի որևէ այլ նիշ:
4. dirlist-bin.txt և dirlist-sbin.txt ֆայլերում փնտրել այն տողերը, որոնք սկսվում են bz կամ zip բառերով։
grep -E '^(bz|zip)' dirlist-bin.txt dirlist-sbin.txt
5. Ցուցադրել հետևյալ հրամանների տարբերությունը․ grep -Eh '^(bz|gz|zip)' dirlist*.txt և grep -Eh '^bz|gz|zip' dirlist*.txt
grep -Eh '^(bz|gz|zip)' dirlist*.txt Փնտրում է «bz», «gz» կամ «zip» -ով սկսվող տողեր:
grep -Eh '^bz|gz|zip' dirlist*.txt Որոնում է «bz»-ով սկսվող կամ «gz» կամ «zip» պարունակող տողեր:
6. Ստուգել տրված էլ․ հասցեի վավերականությունը։ Օր․՝ test@test.com
echo "test@test.com" | grep -E '^([a-zA-Z0-9._%+-]+)@([a-zA-Z0-9.-]+)\.([a-zA-Z]{2,})$'
([a-zA-Z0-9._%+-]+) @ -ից առաջ գրվող լոկալ հատվածն է, որը պետք է պարունակի տառեր, թվեր,.,_,%,+,- սիմվոլներից։
@ սիմվոլը
Domain կամ @ -ից հետո գրվող հատվածը պետք է պարունակի տառեր, թվեր, .,-։
Հետո պետք է լինի . սիմվոլը և առնվազն 2 տառ։
7. Ստուգել տրված IPv4 հասցեի վավերականությունը։ Օր․՝ 192․168․0․1
echo "192.168.0.1" | grep -E '^([0-9]{1,3}\.){3}[0-9]{1,3}$'
Վավեր IPv4 հասցեն կազմված է 4 թվից, որոնք իրարից բաժանված են .-ով և 0-ից 255-ի սահմաններում են գտնվում։

8. Ստեղծել որոշակի պարունակությամբ ֆայլ, որի տողերից մեկում գրել Level բառը։ Ֆայլում փնտրել այն տողերը, որոնք պարունակում են 5 տառից բաղկացած պալինդրոմներ (բառեր, որոնք 2 ուղղություններով կարդացվում են նույնաբար)։
echo -e "Level\nexample\ndeified\ntest\nradar\nanother" > example.txt
CONTENT:

Level
example
deified
test
radar
another
5 տառից բաղկացած պալինդրոմներ գտնող հրամանը

grep -E '^(.)(.)(.)\3\2\1$' example.txt
(.)(.)(.) առաջին 3 սիմվոլներն ա վերցնում, իսկ \3\2\1 վերջին 3 սիմվոլներն ա վերցնում և համեմատում՝ նույնն են թե չէ։

EXPECTED OUTPUT:

Level
radar
9. Տրված է հետևյալ ամսաթիվը․ 01/02/1970: Ձևափոխել այն՝ բերելով հետևյալ ֆորմատի․ 1970-02-01
echo "01/02/1970" | sed -E 's~([0-9]+)/([0-9]+)/([0-9]+)~\3-\2-\1~'
([0-9]+)/([0-9]+)/([0-9]+): Հրամանի այս հատվածը առանձնացնում է 3 (խումբ օր, ամիս, տարի)՝ բաղկացած թվանշաններից և իրարից առանձնացված /-ով:
\3-\2-\1: Այս հատվածը տեղերը փոխում է և արանքում ավելացնում է - ։ \3 վերաբերվում է 3-րդ խմբին (տարի), \2 վերաբերվում է 2-րդ խմբին (ամիս), և \1 վերաբերվում է առաջին խմբին (օր):
10. . Տրված է հետևյալ հեռախոսահամարը․ 0xx 12-34-56 Ձևափոխել այն՝ բերելով հետևյալ ֆորմատի․ (0xx) 123-456
echo "0xx 12-34-56" | sed -E 's~^(0xx) ([0-9]{2})-([0-9])([0-9])-([0-9]{2})$~(\1) \2\3-\4\5~'

Լաբորատոր աշխատանք 4
1. Ստեղծել նոր ֆայլ՝ file.txt, և դրա համար սահմանել հետևյալ իրավունքները․ - rwx r-- r--
touch file.txt
chmod 744 file.txt
Ֆայլի ռեժիմը փոփոխելու համար օգտագործվում է chmod հրամանը

7 = rwx

4 = r--

2. Փոփոխել file.txt ֆայլի իրավունքները՝ բոլոր օգտատերերի համար ավելացնելով կատարելու իրավունք։ Օգտվել ֆայլի ռեժիմների սիմվոլիկ ներկայացումից։
chmod a+x file.txt
3. Փոփոխել file.txt ֆայլի իրավունքները՝ խմբի օգտատերերի և այլ օգտատերերի համար հեռացնելով կատարելու իրավունքը։ Օգտվել սիմվոլիկ ներկայացումից։
chmod go-x file.txt
g (Group) – Խմբին պատկանող օգտատերեր

o (Other) – Մնացած օգտատերեր

-x - հեռացնում է կատարելու իրավունքը

4. Փոփոխել file.txt ֆայլի իրավունքները՝ հեռացնելով բոլոր իրավունքները, և սահմանելով գրելու և կարդալու իրավունքներ միայն ֆայլի սեփականատիրոջ համար։ Նույն գործողությունը կատարել 2 անգամ ՝ օգտվելով ֆայլի ռեժիմների 8-ական և սիմվոլիկ ներկայացումներից։
chmod 600 file.txt
0 = ---

6 = rw-

5.Ստեղծել նոր դիրեկտորիա՝ dir: Սահմանել հետևյալ իրավունքները․ d rw- rw- rw-։ dir դիրեկտորիայում ստեղծել նոր ֆայլ՝ file.txt։ Բացատրել ստացված հաղորդագրությունը։ Փոփոխել դիրեկտորիայի իրավունքներն այնպես, որ ֆայլը հաջողությամբ ստեղծվի։
mkdir -m 666 dir
cd dir
touch file.txt
6. dir դիրեկտորիայում ստեղծել ևս 2 ֆայլ՝ file1.txt, file2.txt։ Մեկ հրամանի կատարմամբ փոփոխել դիրեկտորիայի բոլոր ֆայլերի իրավունքները՝ սահմանելով - rwx rw- rw-։
touch dir/file1.txt dir/file2.txt
chmod 766 dir/*
7. umask հրամանի միջոցով սահմանել այնպիսի bitmask, որ նոր ստեղծվող ֆայլերը լռելյայն կերպով ունենան հետևյալ իրավունքները․ - rw- r-- ---
umask հրամանը ղեկավարում է ֆայլի ստեղծման պահին տրվող իրավունքները։ Հրամանի կատարման արդյունքում ցուցադրվում է 8-ական bitmask (0022), որը սահմանում է այն իրավունքները, որոնք պետք է հեռացվեն ֆայլից։

umask 027
8.umask հրամանի միջոցով սահմանել այնպիսի bitmask, որ նոր ստեղծվող ֆայլերը լռելյայն կերպով ունենան հետևյալ իրավունքները․ - rw- --- ---: Վերադարձնել bitmask-ի լռելյայն արժեքը՝ կատարելով umask 0022 հրամանը։
umask 077
umask 022
9. Ստեղծել սկրիպտ, որը կարտածի /home/student դիրեկտորիայի ֆայլերի ցուցակը։ Սկրիպտի համար սահմանել - -wx r-- r-- իրավունքները։ Կատարել սկրիպտը և բացատրել ստացված հաղորդագրությունը։ Փոփոխել իրավունքներն այնպես, որ սկրիպտը կատարվի։
echo 'ls /home/student' > script.sh
chmod 741 script.sh
chmod +x script.sh
./script.sh
10. Սկրիպտը տեղադրել ~/bin դիրեկտորիայում։ Փոփոխել $PATH փոփոխականն այնպես, որ սկրիպտը հնարավոր լինի կատարել առանց հասցեն նշելու։
mkdir ~/bin
mv script.sh ~/bin
echo 'export PATH=$PATH:~/bin' >> ~/.bashrc
source ~/.bashrc
